global
log /dev/log local0
log /dev/log local1 notice
chroot /var/lib/haproxy
stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
stats timeout 30s
user haproxy
group haproxy
daemon

# Default SSL material locations
ca-base /etc/ssl/certs
crt-base /etc/ssl/private

# Default ciphers to use on SSL-enabled listening sockets.
# For more information, see ciphers(1SSL). This list is from:
#  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
# An alternative list with additional directives can be obtained from
#  https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=haproxy
ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256

ssl-default-bind-options no-sslv3 no-tlsv10 no-tlsv11

tune.ssl.default-dh-param 2048
defaults
log global
mode http
option httplog
option dontlognull
timeout connect 5000
timeout client 50000
timeout server 50000
errorfile 400 /etc/haproxy/errors/400.http
errorfile 403 /etc/haproxy/errors/403.http
errorfile 408 /etc/haproxy/errors/408.http
errorfile 500 /etc/haproxy/errors/500.http
errorfile 502 /etc/haproxy/errors/502.http
errorfile 503 /etc/haproxy/errors/503.http
errorfile 504 /etc/haproxy/errors/504.http

frontend ssl
mode tcp
bind 0.0.0.0:443 #ssl crt /etc/xray/xray.crt alpn h2,http/1.1
tcp-request inspect-delay 3s
tcp-request content accept if { req.ssl_hello_type 1 }
acl web req_ssl_sni -i xxx  #HTTP
acl methoded method GET HEAD
use_backend web_back if web
use_backend itil_vpn if methoded
use_backend no_Length if !{ req.len 0 }

# Use Default Stunnel Fallback
default_backend dns_vpn
default_backend drop_vpn
default_backend itil_vpn

# Use Default Xray h2 Fallback
use_backend nodes1-http2 if HTTP { ssl_fc_alpn -i h2 } 
use_backend nodes2-http2 if HTTP { ssl_fc_alpn -i h2 } 
use_backend nodes3-http2 if HTTP { ssl_fc_alpn -i h2 } 

# Use Default Xray HTTP Fallback
default_backend back_to_nginx1
default_backend back_to_nginx2
default_backend back_to_nginx3

backend web_back
mode tcp
server nginx 127.0.0.1:10020

backend drop_vpn
mode tcp
server drop 127.0.0.1:109

backend dns_vpn
mode tcp
server dns 127.0.0.1:88

backend itil_vpn
mode tcp
server vpn 127.0.0.1:1194

backend no_Length
mode tcp
server localhost 127.0.0.1:444

# Default Setting Xray HTTP
backend back_to_nginx1
mode tcp
server http1 127.0.0.1:5001

backend back_to_nginx2
mode tcp
server http2 127.0.0.1:5002

backend back_to_nginx3
mode tcp
server http3 127.0.0.1:5003

# Default Setting Xray gRPC
backend nodes1-http2
mode tcp
server http2 127.0.0.1:5004 send-proxy

backend nodes2-http2
mode tcp
server http2 127.0.0.1:5005 send-proxy

backend nodes3-http2
mode tcp
server http2 127.0.0.1:5006 send-proxy
